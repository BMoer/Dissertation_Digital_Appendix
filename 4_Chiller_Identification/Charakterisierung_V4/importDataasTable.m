function [Table,HeadNames] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   B24A1 = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   B24A1 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   B24a1 = importfile('B24a_1.csv', 2, 181165);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/10/13 17:00:15

%% Initialize variables.
delimiter = ',';
if nargin<=3
    startRow = 2;
    endRow = inf;
end

%% Number of columns and their names
fileID = fopen(filename,'r');
data = {}; 

l = fgetl(fileID);
data = textscan(l, '%s');
fclose(fileID);

HeadNames = strsplit(data{1}{1},','); 

% Format string for each line of text:
formatSpec = '%s'; %Timestamp

for i = drange(2,length(HeadNames))
    formatSpec = cat(2,formatSpec,'%f');
end
formatSpec = cat(2,formatSpec,'%[^\n\r]');


%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);


%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
Table = table(dataArray{1:end-1}, 'VariableNames', HeadNames);
